"""
This type stub file was generated by pyright.
"""

from dataclasses import dataclass
from typing import Any, Optional, Type, TypeVar
from pydantic import BaseModel

"""Client module for the L1M Python SDK."""
class L1MError(Exception):
    """Error returned by the L1M API."""
    def __init__(self, message: str, status_code: Optional[int] = ..., body: Any = ...) -> None:
        """Initialize a new L1M error.

        Args:
            message: Error message
            status_code: HTTP status code
            body: Response body
        """
        ...
    


@dataclass
class ProviderOptions:
    """Provider options for the L1M API."""
    model: str
    url: str
    key: str
    ...


@dataclass
class ClientOptions:
    """Options for the L1M client."""
    base_url: str = ...
    provider: Optional[ProviderOptions] = ...


@dataclass
class RequestOptions:
    """Options for a request to the L1M API."""
    provider: ProviderOptions
    cache_key: Optional[str] = ...


T = TypeVar("T", bound=BaseModel)
class L1M:
    """L1M API Client."""
    def __init__(self, options: Optional[ClientOptions] = ...) -> None:
        """Initialize a new L1M client.

        Args:
            options: Client options
        """
        ...
    
    def structured(self, input: str, schema: Type[T], options: Optional[RequestOptions] = ...) -> T:
        """Generate a structured response from the L1M API.

        Args:
            input: Input text (Base64 encoded if image data)
            schema: Pydantic model to validate the response against
            options: Request options

        Returns:
            Structured response from the L1M API

        Raises:
            L1MError: If the request fails
        """
        ...
    


